version: "3.8"

services:
  dnss:
    container_name: dnss
    image: ubuntu/bind9:latest
    restart: unless-stopped
    hostname: dnss
    environment:
      - BIND9_USER=bind
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ base_path }}/bind/config:/etc/bind
      - {{ base_path }}/bind/cache:/var/cache/bind
      - {{ base_path }}/bind/records:/var/lib/bind
    networks:
      hass_net:
        ipv4_address: 172.18.0.2
    dns:
      - 127.0.0.1
    ports:
      - "53:53/tcp"
      - "53:53/udp"

  # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    labels:
      - traefik.http.routers.pihole.rule=Host(`{{ network.host_ip }}`,`pi.hole`)
      - traefik.http.services.pihole.loadbalancer.server.port=80
    restart: unless-stopped
    hostname: pihole
    environment:
      - WEBPASSWORD=admin
      - PROXY_LOCATION="172.18.0.3"
      - FTLCONF_LOCAL_IPV4="172.18.0.2"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ base_path }}/pihole:/etc/pihole
      - {{ base_path }}/dnsmasq:/etc/dnsmasq.d
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    networks:
      hass_net:
        ipv4_address: 172.18.0.2
    # cap_add:
    #   - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    dns:
      - 172.18.0.2
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
    
  # https://doc.traefik.io/traefik/routing/providers/docker/#configuration-examples
  ingress:
    container_name: ingress
    image: traefik:banon
    labels:
      - traefik.http.routers.ingress.rule=Host(`traefik.hass.lo`)
      # The Web UI (enabled by --api.insecure=true)
      - traefik.http.services.ingress.loadbalancer.server.port=8080
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    depends_on:
      # - dnss
      - pihole
    restart: unless-stopped
    hostname: ingress
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      hass_net:
        ipv4_address: 172.18.0.3
    ports:
      - "80:80"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    labels:
      - traefik.http.routers.portainer.rule=Host(`portainer.hass.lo`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    depends_on:
      - ingress
    restart: unless-stopped
    hostname: portainer
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ base_path }}/portainer:/data
    networks:
      - hass_net
      
  duplicati:
    container_name: duplicati
    image: lscr.io/linuxserver/duplicati:latest
    labels:
      - traefik.http.routers.duplicati.rule=Host(`duplicati.hass.lo`)
      - traefik.http.services.duplicati.loadbalancer.server.port=8200
    depends_on:
      - ingress
    restart: unless-stopped
    hostname: duplicati
    environment:
      - PUID={{ user_id }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ base_path }}/duplicati/config:/config
      - {{ base_path }}/duplicati/backups:/backups
      - {{ base_path }}:/source
    networks:
      - hass_net

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    labels:
      - traefik.http.routers.influxdb.rule=Host(`influxdb.hass.lo`)
      - traefik.http.services.influxdb.loadbalancer.server.port=8888
    depends_on:
      - ingress
    restart: unless-stopped
    hostname: influxdb
    volumes:
      - {{ base_path }}/influxdb:/var/lib/influxdb
    networks:
      - hass_net
    ports:
      - "8086:8086"
  chronograf:
    container_name: chronograf
    image: chronograf:1.8.4
    command:
      - --influxdb-url=http://localhost:8086
    volumes:
      - {{ base_path }}/chronograf:/var/lib/chronograf
    restart: unless-stopped
    network_mode: service:influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    labels:
      - traefik.http.routers.grafana.rule=Host(`grafana.hass.lo`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    user: {{ user_id }}
    depends_on:
      - ingress
      - influxdb
    restart: unless-stopped
    hostname: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Home
      - GF_AUTH_LDAP_ENABLED=false
      - GF_AUTH_PROXY_ENABLED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - {{ base_path }}/grafana:/var/lib/grafana
    networks:
      - hass_net

  mariadb:
    container_name: mariadb
    image: mariadb:latest
    labels:
      - traefik.http.routers.mariadb.rule=Host(`mariadb.hass.lo`)
      - traefik.http.services.mariadb.loadbalancer.server.port=8080
    depends_on:
      - ingress
    restart: unless-stopped
    hostname: mariadb
    environment:
      - MARIADB_DATABASE={{ db.name }}
      - MARIADB_USER={{ db.user }}
      - MARIADB_PASSWORD={{ db.password }}
      - MARIADB_ROOT_PASSWORD={{ db.root_password }}
    volumes:
      - {{ base_path }}/mariadb:/var/lib/mysql
    networks: 
      - hass_net
    ports:
      - "3306:3306"
  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    network_mode: service:mariadb

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    labels:
      - traefik.http.routers.homeassistant.rule=HostRegexp(`{subdomain:(?:www\.)?}hass.lo`)
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
    user: {{ user_id }}
    privileged: true
    depends_on:
      - ingress
      - mariadb
      - grafana
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:8123 || exit 1
      start_period: 10s
      interval: 1s
      timeout: 1s
      retries: 3
    hostname: homeassistant
    tmpfs:
      - /.config
      - /.cache
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ ha.config_path }}:/config
    networks:
      - hass_net
    dns:
      - 172.18.0.2
      
networks:
  hass_net:
    name: hass
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1
