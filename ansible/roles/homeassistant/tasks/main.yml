---
- name: Template docker-compose file
  tags: docker-compose
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ ha.base_path }}/docker-compose.yaml"
    owner: "{{ userid }}"
    mode: '0644'

- name: Start docker compose containers
  ansible.builtin.command: "docker compose -f {{ ha.base_path }}/docker-compose.yaml up -d"

- name: Wait for directory to be created in container
  ansible.builtin.wait_for:
    path: "{{ ha.config_path }}"
    state: present
    timeout: 300
    check_with: "ls {{ ha.config_path }}/.storage"
  register: directory_exits

- name: Debug output
  ansible.builtin.debug:
    var: directory_exists

- name: Check if directory exists
  ansible.builtin.assert:
    that: directory_exists.stdout != ""

- name: Template Home Assistant secrets
  ansible.builtin.template:
    src: secrets.yaml.j2
    dest: "{{ ha.config_path }}/secrets.yaml"
    owner: "{{ userid }}"
    mode: '0644'

- name: Copy initial config file for Home Assistant
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ ha.config_path }}"
    owner: "{{ userid }}"
    mode: '0644'
  loop:
    - configuration.yaml

- name: Install HACS addon and restart container
  block:
    - name: Install HACS addon
      ansible.builtin.command:
        cmd: "cd /opt/homeassistant/config && wget -O - https://get.hacs.xyz | bash -"
        creates: "{{ ha.config_path }}/custom_components/hacs"
      register: hacs_install

    - name: Restart Home Assistant container
      ansible.builtin.command: "docker compose -f {{ ha.base_path }}/docker-compose.yaml restart homeassistant"
      when: hacs_install.changed

  rescue:
    - name: Rollback
      ansible.builtin.command: "rm -rf {{ ha.config_path }}/custom_components/hacs"
